<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Esent.Collections</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2">
            <content>
            Represents a collection of persistent keys and values.
            </content>
            <summary>
            Represents a collection of persistent keys and values.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.NumUpdateLocks">
            <summary>
            Number of lock objects. Keys are mapped to lock objects using their
            hash codes. Making this count a prime number reduces the chance of
            collisions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.First">
            <summary>
            Returns the first element of the dictionary.
            </summary>
            <returns>The first element.</returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the dictionary is empty.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.FirstOrDefault">
            <summary>
            Returns the first element of the dictionary or a default value.
            </summary>
            <returns>The first element.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Last">
            <summary>
            Returns the last element of the dictionary.
            </summary>
            <returns>The last element.</returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the dictionary is empty.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.LastOrDefault">
            <summary>
            Returns the last element of the dictionary or a default value.
            </summary>
            <returns>The last element.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Where(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>
            Optimize a where statement which uses this dictionary.
            </summary>
            <param name="expression">
            The predicate determining which items should be enumerated.
            </param>
            <returns>
            An enumerator matching only the records matched by the predicate.
            </returns>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.instance">
            <summary>
            The ESENT instance this dictionary uses. An Instance object inherits
            from SafeHandle so this instance will be (eventually) terminated even
            if the dictionary isn't disposed. 
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.updateLocks">
            <summary>
            An update lock should be taken when the Dictionary is being updated. 
            Read operations can proceed without any locks (the cursor cache has
            its own lock to control access to the cursors). There are multiple
            update locks, which allows multiple writers. When updating a key
            take the lock which maps to key.GetHashCode() % updateLocks.Length.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.converters">
            <summary>
            Methods to set and retrieve data in ESE.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.config">
            <summary>
            Meta-data information for the dictionary database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.cursors">
            <summary>
            Cache of cursors used to access the dictionary.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.databaseDirectory">
            <summary>
            Path to the database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.databasePath">
            <summary>
            Path to the database.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PersistentDictionary class.
            </summary>
            <param name="directory">
            The directory to create the database in.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.String)">
            <summary>
            Initializes a new instance of the PersistentDictionary class.
            </summary>
            <param name="dictionary">
            The IDictionary whose contents are copied to the new dictionary.
            </param>
            <param name="directory">
            The directory to create the database in.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> 
            that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.IEnumerator"/>
            object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <returns>
            True if <paramref name="item"/> was successfully removed from the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>;
            otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original
            <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds an item to the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> contains a specific value.
            </summary>
            <returns>
            True if <paramref name="item"/> is found in the
            <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>;
            otherwise, false.
            </returns>
            <param name="item">
            The object to locate in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination
            of the elements copied from <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-The number of elements in the source <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Clear">
            <summary>
            Removes all items from the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> contains an element with the specified key.
            </summary>
            <returns>
            True if the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> contains an element with the key; otherwise, false.
            </returns>
            <param name="key">The key to locate in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Add(`0,`1)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.</exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <returns>
            True if the element is successfully removed; otherwise, false. This method also returns false if
            <paramref name="key"/> was not found in the original <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </returns>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <returns>
            True if the object that implements <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>
            contains an element with the specified key; otherwise, false.
            </returns>
            <param name="key">
            The key whose value to get.</param>
            <param name="value">When this method returns, the value associated
            with the specified key, if the key is found; otherwise, the default
            value for the type of the <paramref name="value"/> parameter. This
            parameter is passed uninitialized.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.ContainsValue(`1)">
            <summary>
            Determines whether the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> contains an element with the specified value.
            </summary>
            <remarks>
            This method requires a complete enumeration of all items in the dictionary so it can be much slower than
            <see cref="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.ContainsKey(`0)"/>.
            </remarks>
            <returns>
            True if the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> contains an element with the value; otherwise, false.
            </returns>
            <param name="value">The value to locate in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Flush">
            <summary>
            Force all changes made to this dictionary to be written to disk.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.GetKeyEnumerator">
            <summary>
            Returns an enumerator that iterates through the keys.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the keys.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.GetValueEnumerator">
            <summary>
            Returns an enumerator that iterates through the keys.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the values.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.GetGenericEnumerator``1(System.Func{Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor{`0,`1},``0},Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0})">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <typeparam name="T">The type returned by the iterator.</typeparam>
            <param name="getter">A function that generates a value from a cursor.</param>
            <param name="range">The range of keys to iterate.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CheckDatabaseMetaData(System.String)">
            <summary>
            Check the database meta-data. This makes sure the tables and columns exist and
            checks the type of the database.
            </summary>
            <param name="database">The database to check.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CreateDatabase(System.String)">
            <summary>
            Create the database.
            </summary>
            <param name="database">The name of the database to create.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CreateGlobalsTable(Microsoft.Isam.Esent.Interop.Session,Microsoft.Isam.Esent.Interop.JET_DBID)">
            <summary>
            Create the globals table.
            </summary>
            <param name="session">The session to use.</param>
            <param name="dbid">The database to create the table in.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CreateDataTable(Microsoft.Isam.Esent.Interop.Session,Microsoft.Isam.Esent.Interop.JET_DBID)">
            <summary>
            Create the data table.
            </summary>
            <param name="session">The session to use.</param>
            <param name="dbid">The database to create the table in.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.UsingCursor(System.Action{Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor{`0,`1}})">
            <summary>
            Get a cursor, perform the specified action and release the cursor.
            </summary>
            <param name="action">The action to perform.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.UsingCursor``1(System.Func{Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor{`0,`1},``0})">
            <summary>
            Get a cursor, execute the specified function, release the cursor and
            return the function's result.
            </summary>
            <typeparam name="T">The return type of the function.</typeparam>
            <param name="func">The function to execute.</param>
            <returns>The return value of the function.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.LockObject(`0)">
            <summary>
            Gets an object used to lock updates to the key.
            </summary>
            <param name="key">The key to be locked.</param>
            <returns>
            An object that should be locked when the key is updated.
            </returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> is read-only.
            </summary>
            <returns>
            True if the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the keys of the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <returns>
            An <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2"/> containing the keys of the object that implements <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the keys of the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <returns>
            An <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2"/> containing the keys of the object that implements <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the values in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <returns>
            An <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> containing the values in the object that implements <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the values in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <returns>
            An <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> containing the values in the object that implements <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Database">
            <summary>
            Gets the path of the directory that contains the dictionary database.
            The database consists of a set of files found in the directory.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Item(`0)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <returns>
            The element with the specified key.
            </returns>
            <param name="key">The key of the element to get or set.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The property is retrieved and <paramref name="key"/> is not found.
            </exception>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2">
            <summary>
            Contains methods to set and get data from the ESENT
            database.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.keyColumnConverter">
            <summary>
            Column converter for the key column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.valueColumnConverter">
            <summary>
            Column converter for the value column.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.#ctor">
            <summary>
            Initializes a new instance of the PersistentDictionaryConverters
            class. This looks up the conversion types for
            <typeparamref name="TKey"/> and <typeparamref name="TValue"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.MakeKey">
            <summary>
            Gets a delegate that can be used to call JetMakeKey with an object of
            type <typeparamref name="TKey"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.SetKeyColumn">
            <summary>
            Gets a delegate that can be used to set the Key column with an object of
            type <typeparamref name="TKey"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.SetValueColumn">
            <summary>
            Gets a delegate that can be used to set the Value column with an object of
            type <typeparamref name="TValue"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.RetrieveKeyColumn">
            <summary>
            Gets a delegate that can be used to retrieve the Key column, returning
            an object of type <typeparamref name="TKey"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.RetrieveValueColumn">
            <summary>
            Gets a delegate that can be used to retrieve the Value column, returning
            an object of type <typeparamref name="TValue"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.KeyColtyp">
            <summary>
            Gets the JET_coltyp that the key column should have.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.ValueColtyp">
            <summary>
            Gets the JET_coltyp that the value column should have.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1">
            <summary>
            Represents a range of keys, where each end can be inclusive or
            exclusive.
            </summary>
            <typeparam name="T">The type of the key.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.#ctor(Microsoft.Isam.Esent.Collections.Generic.Key{`0},Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Initializes a new instance of the KeyRange class.
            </summary>
            <param name="min">The minimum key. This can be null.</param>
            <param name="max">The maximum key. This can be null.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.op_BitwiseAnd(Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0},Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0})">
            <summary>
            Return the intersection of two ranges.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <returns>The intersection of the two ranges.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.ToString">
            <summary>
            Generate a string representation of the range.
            </summary>
            <returns>A string representation of the range.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.LowerBound(Microsoft.Isam.Esent.Collections.Generic.Key{`0},Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Returns the lower bound of two keys. This is the maximum of the
            keys, where null represents the minimum value.
            </summary>
            <param name="a">The first key.</param>
            <param name="b">The second key.</param>
            <returns>The larger of the two keys.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.GetUpperBound(Microsoft.Isam.Esent.Collections.Generic.Key{`0},Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Returns the upper bound of two keys. This is the minimum of the
            keys, where null represents the maximum value.
            </summary>
            <param name="a">The first key.</param>
            <param name="b">The second key.</param>
            <returns>The smaller of the two keys.</returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.Min">
            <summary>
            Gets the minimum key value. This is null if there is
            no minumum.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.Max">
            <summary>
            Gets the maximum key value. This is null if there is
            no maximum.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig">
            <summary>
            Meta-data configuration for the dictionary database.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.Version">
            <summary>
            Gets a string describing the current version of the 
            PersistentDictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.Database">
            <summary>
            Gets the name of the database. The user provides the
            directory and the database is always given this name.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.BaseName">
            <summary>
            Gets the basename of the logfiles for the instance.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.GlobalsTableName">
            <summary>
            Gets the name of the globals table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.VersionColumnName">
            <summary>
            Gets the name of the version column in the globals table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.CountColumnName">
            <summary>
            Gets the name of the count column in the globals table.
            This column tracks the number of items in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.FlushColumnName">
            <summary>
            Gets the name of the flush column in the globals table.
            This column is updated when a Flush operation is performed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.KeyTypeColumnName">
            <summary>
            Gets the name of the key type column in the globals table.
            This column stores the type of the key in the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.ValueTypeColumnName">
            <summary>
            Gets the name of the value type column in the globals table.
            This column stores the type of the value in the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.DataTableName">
            <summary>
            Gets the name of the data table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.KeyColumnName">
            <summary>
            Gets the name of the key column in the data table.
            This column stores the key of the item.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.ValueColumnName">
            <summary>
            Gets the name of the value column in the data table.
            This column stores the value of the item.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.KeyExpressionEvaluator`2">
            <summary>
            Contains methods to evaluate a predicate Expression and determine
            a key range which contains all items matched by the predicate.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TValue">The value type.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyExpressionEvaluator`2.GetKeyRange(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>
            Evaluate a predicate Expression and determine a key range which
            contains all items matched by the predicate.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <returns>
            A KeyRange that contains all items matched by the predicate. If no
            range can be determined the range will include all items.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyExpressionEvaluator`2.GetKeyRangeOfSubtree(System.Linq.Expressions.Expression)">
            <summary>
            Evaluate a predicate Expression and determine a key range which
            contains all items matched by the predicate.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <returns>
            A KeyRange that contains all items matched by the predicate. If no
            range can be determined the range will include all items.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyExpressionEvaluator`2.IsConstantComparison(System.Linq.Expressions.BinaryExpression,`0@)">
            <summary>
            Determine if the current binary expression involves the Key of the parameter
            and a constant value.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="value">Returns the value being compared to the key.</param>
            <returns>
            True if the expression involves the key of the parameter and a constant value.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyExpressionEvaluator`2.IsKeyAccess(System.Linq.Expressions.Expression)">
            <summary>
            Determine if the expression is accessing the key of the expression
            parameter.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <returns>True if the expression is accessing the key of the parameter.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2">
            <summary>
            A cache of <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2"/>
            objects.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.instance">
            <summary>
            The underlying ESENT instance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.converters">
            <summary>
            Data converters for the cursors.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.config">
            <summary>
            Configuration for the cursors.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.database">
            <summary>
            The name of the database to attach.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.cursors">
            <summary>
            The cached cursors.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.lockObject">
            <summary>
            Lock objects used to serialize access to the cursors.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.#ctor(Microsoft.Isam.Esent.Interop.Instance,System.String,Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters{`0,`1},Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig)">
            <summary>
            Initializes a new instance of the PersistentDictionaryCursorCache
            class.
            </summary>
            <param name="instance">The ESENT instance to use when opening a cursor.</param>
            <param name="database">The database to open the cursors on.</param>
            <param name="converters">The converters the cursors should use.</param>
            <param name="config">The configuration for the cursors.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.GetCursor">
            <summary>
            Gets a new cursor. This will return a cached cursor if available,
            or create a new one.
            </summary>
            <returns>A new cursor.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.FreeCursor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor{`0,`1})">
            <summary>
            Free a cursor. This will cache the cursor if the cache isn't full
            and dispose of it otherwise.
            </summary>
            <param name="cursor">The cursor to free.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.OpenCursor">
            <summary>
            Create a new cursor.
            </summary>
            <returns>A new cursor.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3">
            <summary>
            Base class for collections which can be returned from
            a PersistentDictionary (i.e. Keys and Values).
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="T">The type to be enumerated.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.dictionary">
            <summary>
            The dictionary being enumerated.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.#ctor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the PersistentDictionaryCollection class.
            </summary>
            <param name="dictionary">
            The dictionary being enumerated to provide the collection.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.Add(`2)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.Contains(`2)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            True if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.CopyTo(`2[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param><param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception><exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.-or-Type <paramref name="T"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.Remove(`2)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            True if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.Dictionary">
            <summary>
            Gets the dictionary being enumerated by this collection.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.Compare">
            <summary>
            Provides generic comparison methods.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Compare.AreEqual``1(``0,``0)">
            <summary>
            Compare two objects to determine if they are equal.
            </summary>
            <typeparam name="T">The type to compare.</typeparam>
            <param name="value1">The first object.</param>
            <param name="value2">The second object.</param>
            <returns>True if they are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.Globals">
            <summary>
            Global parameters for all collections.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.Globals.initLock">
            <summary>
            Used to make sure only one thread can perform the global initialization.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.Globals.isInit">
            <summary>
            True if the Init() method has already run.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Globals.Init">
            <summary>
            A global initialization function. This should be called
            exactly once, before any ESENT instances are created.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Globals.DoInit">
            <summary>
            Perform the global initialization. This sets the page
            size, configuration, cache size and other global
            parameters.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryFile">
            <summary>
            Methods that deal with <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>
            database files.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryFile.Exists(System.String)">
            <summary>
            Determine if a dictionary database file exists in the specified directory.
            </summary>
            <param name="directory">The directory to look in.</param>
            <returns>True if the database file exists, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryFile.DeleteFiles(System.String)">
            <summary>
            Delete all files associated with a PersistedDictionary database from
            the specified directory.
            </summary>
            <param name="directory">The directory to delete the files from.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2">
            <summary>
            Combines a JET_SESID and JET_TABLEID into a cursor which can
            retrieve data from and update a PersistentDictionary database.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.instance">
            <summary>
            The ESENT instance the cursor is opened against.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.session">
            <summary>
            The ESENT session the cursor is using.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.converters">
            <summary>
            Converters used to interact with ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.config">
            <summary>
            Database meta-data configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.database">
            <summary>
            The database to use.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.dbid">
            <summary>
            ID of the opened database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.globalsTable">
            <summary>
            ID of the opened globals table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.countColumn">
            <summary>
            ID of the count column in the globals table. This stores the
            number of items in the collection.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.flushColumn">
            <summary>
            ID of the flush column in the globals table. This is updated
            when we want to flush the database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.dataTable">
            <summary>
            ID of the opened data table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.keyColumn">
            <summary>
            ID of the key column in the data table. This stores the keys of
            the items.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.valueColumn">
            <summary>
            ID of the value column in the data table. This stores the values
            of the items.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.#ctor(Microsoft.Isam.Esent.Interop.Instance,System.String,Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters{`0,`1},Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig)">
            <summary>
            Initializes a new instance of the PersistentDictionaryCursor class.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="database">The database to open.</param>
            <param name="converters">ESENT conversion functions.</param>
            <param name="config">The database meta-data config.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.BeginTransaction">
            <summary>
            Begin a new transaction for this cursor.
            </summary>
            <returns>The new transaction.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.TrySeek(`0)">
            <summary>
            Try to find the specified key. If the key is found
            the cursor will be positioned on the record with the
            key.
            </summary>
            <param name="key">The key to find.</param>
            <returns>True if the key was found, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.SeekWithKeyNotFoundException(`0)">
            <summary>
            Seek for the specified key. If the key is found the
            cursor will be positioned with the record on the key.
            If the key is not found then an exception will be thrown.
            </summary>
            <param name="key">The key to find.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The key wasn't found.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.MoveBeforeFirst">
            <summary>
            Position the cursor before the first record in the table.
            A <see cref="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.TryMoveNext"/> will then position the cursor
            on the first record.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.TryMoveNext">
            <summary>
            Try to move to the next record.
            </summary>
            <returns>
            True if the move was successful, false if there are no more records.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.MoveAfterLast">
            <summary>
            Position the cursor after the last record in the table.
            A <see cref="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.TryMovePrevious"/> will then position the cursor
            on the first record.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.TryMovePrevious">
            <summary>
            Try to move to the previous record.
            </summary>
            <returns>
            True if the move was successful, false if there are no more records.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.MoveLastWithKeyNotFoundException">
            <summary>
            Move to the last record, throwing an exception if there are no record.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.SetIndexRange(Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0})">
            <summary>
            Create an index range on the cursor, controlling which records will be enumerated.
            </summary>
            <param name="range">The range to set.</param>
            <returns>False if the range is empty.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.RetrieveCurrentKey">
            <summary>
            Retrieve the key column of the record the cursor is currently positioned on.
            </summary>
            <returns>The key of the record.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.RetrieveCurrentValue">
            <summary>
            Retrieve the value column of the record the cursor is currently positioned on.
            </summary>
            <returns>The value of the record.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.RetrieveCurrent">
            <summary>
            Retrieve the key and value of record the cursor is currently positioned on.
            </summary>
            <returns>The key and value of the record as a KeyValuePair.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.RetrieveCount">
            <summary>
            Retrieve the count of items in the database from the globals table.
            </summary>
            <returns>The number of items in the database.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.Insert(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Insert data into the data table. No record with the same key
            should exist.
            </summary>
            <param name="data">The data to add.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.DeleteCurrent">
            <summary>
            Delete the record the cursor is currently positioned on.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.ReplaceCurrentValue(`1)">
            <summary>
            Replace the value column of the record the cursor is currently on.
            </summary>
            <param name="value">The new value.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.Flush">
            <summary>
            Generate a null database update that we can wrap in a non-lazy transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.MakeKey(`0)">
            <summary>
            Calls JetMakeKey.
            </summary>
            <param name="key">The value of the key column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.SetKeyColumn(`0)">
            <summary>
            Sets the key column.
            </summary>
            <param name="key">The value of the key column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.SetValue(`1)">
            <summary>
            Sets the value column.
            </summary>
            <param name="value">The value of the value column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.UpdateCount(System.Int32)">
            <summary>
            Update the count in the globals table. This is done with EscrowUpdate
            so that there won't be any write conflicts.
            </summary>
            <param name="delta">The delta to apply to the count.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.AttachDatabase">
            <summary>
            Attach the database, open the global and data tables and get the required columnids.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.Key`1">
            <summary>
            Represents a generic key value.
            </summary>
            <typeparam name="T">The datatype of the key.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Key`1.#ctor(`0,System.Boolean)">
            <summary>
            Initializes a new instance of the Key class.
            </summary>
            <param name="value">The value of the key.</param>
            <param name="isInclusive">True if this key is inclusive.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.Key`1.IsInclusive">
            <summary>
            Gets a value indicating whether the key is inclusive.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.Key`1.Value">
            <summary>
            Gets the value of the key.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter">
            <summary>
            Contains methods to set and get data from the ESENT
            database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.SetColumnDelegates">
            <summary>
            A mapping of types to SetColumn functions.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.RetrieveColumnDelegates">
            <summary>
            A mapping of types to RetrieveColumn functions.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.Coltyps">
            <summary>
            A mapping of types to ESENT column types.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.type">
            <summary>
            The CLR type that this column supports.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.setColumn">
            <summary>
            The SetColumn delegate for this object.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.retrieveColumn">
            <summary>
            The RetrieveColumn delegate for this object.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.coltyp">
            <summary>
            The column type for this object.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.#cctor">
            <summary>
            Initializes static members of the ColumnConverter class. This sets up
            the conversion ditionaries.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the ColumnConverter class.
            </summary>
            <param name="type">The type to convert to/from.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.IsSerializable(System.Type)">
            <summary>
            Determine if the given type is a serializable structure.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            True if the type (and the types it contains) are all serializable structures.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.AddNullableDelegates``1">
            <summary>
            Generate nullable MakeKey/SetKey delegates for the type.
            </summary>
            <typeparam name="T">The (non-nullable) type to add delegates for.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.AddNullableSetColumn``1">
            <summary>
            Adds a SetColumn delegate that takes a nullable version of the specified type
            to the <see cref="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.SetColumnDelegates"/> object.
            </summary>
            <typeparam name="T">The type to add the delegate for.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.MakeNullableSetColumn``1(Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.SetColumnDelegate)">
            <summary>
            Creates a delegate which takes a nullable object and wraps the
            non-nullable SetColumn method.
            </summary>
            <typeparam name="T">The type that will be nullable.</typeparam>
            <param name="wrappedSetColumn">The (non-nullable) delegrate to wrap.</param>
            <returns>
            A SetColumnDelegate that takes a Nullable<typeparamref name="T"/> and
            either sets the column to null or calls the wrapped delegate.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.RetrieveDateTime(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a nullable date time. We do not use Api.RetrieveColumnAsDateTime because
            that stores the value in OADate format, which is less accurate than System.DateTime.
            Instead we store a DateTime as its Tick value in an Int64 column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A nullable DateTime constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.RetrieveTimeSpan(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a nullable TimeSpan.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A nullable TimeSpan constructed from the column.</returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.Type">
            <summary>
            Gets the type of object that this converter takes and returns.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.Coltyp">
            <summary>
            Gets the type of database column the value should be stored in.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.SetColumn">
            <summary>
            Gets a delegate that can be used to set the Key column with an object of
            type <see cref="P:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.RetrieveColumn">
            <summary>
            Gets a delegate that can be used to retrieve the Key column, returning
            type <see cref="P:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.Type"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.SetColumnDelegate">
            <summary>
            Represents a SetColumn operation.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the value in. An update should be prepared.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter.RetrieveColumnDelegate">
            <summary>
            Represents a RetrieveColumn operation.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the value from.</param>
            <param name="columnid">The column to retrieve.</param>
            <returns>The retrieved value.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2">
            <summary>
            Collection of the keys in a PersistentDictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.#ctor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the PersistentDictionaryKeyCollection class.
            </summary>
            <param name="dictionary">The dictionary containing the keys.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            True if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.First">
            <summary>
            Returns the first key in the collection.
            </summary>
            <returns>The first key.</returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the dictionary is empty.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.FirstOrDefault">
            <summary>
            Returns the first key in the collection or a default value.
            </summary>
            <returns>The first key or a defaut value.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Min">
            <summary>
            Returns the minimum key.
            </summary>
            <returns>The minimum key.</returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the key collection is empty.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Last">
            <summary>
            Returns the last key in the collection.
            </summary>
            <returns>The Last key.</returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the dictionary is empty.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.LastOrDefault">
            <summary>
            Returns the last key in the collection or a default value.
            </summary>
            <returns>The last key or a defaut value.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Max">
            <summary>
            Returns the maximum key.
            </summary>
            <returns>The maximum key.</returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the key collection is empty.
            </exception>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`2">
            <summary>
            An object which can enumerate the specified key range in a PersistentDictionary.
            </summary>
            <typeparam name="TKey">The type of the key in the dictionary.</typeparam>
            <typeparam name="TValue">Thne type of the value in the dictionary.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`2.dict">
            <summary>
            The dictionary being iterated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`2.range">
            <summary>
            The key range being iterated.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`2.#ctor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary{`0,`1},Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0})">
            <summary>
            Initializes a new instance of the PersistentDictionaryEnumerator class.
            </summary>
            <param name="dict">The dictionary to enumerate.</param>
            <param name="range">The key range being enumerated.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryValueCollection`2">
            <summary>
            Collection of the values in a PersistentDictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryValueCollection`2.#ctor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the PersistentDictionaryValueCollection class.
            </summary>
            <param name="dictionary">The dictionary containing the values.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryValueCollection`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryValueCollection`2.Contains(`1)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            True if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter">
            <summary>
            Extends the ColumnConverter class with methods to make a key.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter.MakeKeyDelegates">
            <summary>
            A mapping of types to MakeKey functions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the KeyColumnConverter class.
            </summary>
            <param name="type">The type to convert to/from.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter.MakeKey">
            <summary>
            Gets a delegate that can be used to call JetMakeKey with an object of
            type <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter.MakeKeyDelegate">
            <summary>
            Represents a MakeKey operation.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to make the key in.</param>
            <param name="value">The value to make the key with.</param>
            <param name="grbit">Make key options.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.Copy">
            <summary>
            Provides generic copy methods.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Copy.CopyTo``1(System.Collections.Generic.ICollection{``0},``0[],System.Int32)">
            <summary>
            Compare two objects to determine if they are equal.
            </summary>
            <typeparam name="T">The type to compare.</typeparam>
            <param name="items">The items to copy.</param>
            <param name="array">The index to copy into.</param>
            <param name="arrayIndex">The location in the index to start copying into.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.ConstantExpressionEvaluator`1">
            <summary>
            Methods to evaluate an expression which returns a T.
            </summary>
            <typeparam name="T">The type returned by the expression.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ConstantExpressionEvaluator`1.TryGetConstantExpression(System.Linq.Expressions.Expression,`0@)">
            <summary>
            Determine if the given expression is a constant expression, and
            return the value of the expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="value">The value of the expression.</param>
            <returns>True if the expression was a constant, false otherwise.</returns>
        </member>
    </members>
</doc>
